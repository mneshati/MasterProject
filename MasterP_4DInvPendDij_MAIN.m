%clc
%%Parametrization---------------------
Destin=[5;5;5;5]; %Destination, Point (0,0)
NodeSet=Destin;% NodeSet= A set of all nodes that have to be visited
NodeSetC=2;
for i=1:9
    for j=1:9
        for k=1:9
            for m=1:9
                Counter(i,j,k,m)=0; % Counts the number of the times a point[i;j] has been visited
            end
        end
    end
end
Counter(5,5,5,5)=1;
for i=1:9
    for j=1:9
        for k=1:9
            for m=1:9
                DijData(i,j,k,m).Q=inf;
                DijData(i,j,k,m).U=[];
                DijData(i,j,k,m).T=[];
                %DijData(i,j)= Information of the route from the initial point given [i;j]
                %to the destination
            end
        end
    end
end
DijData(5,5,5,5).Q=0;
DijData(5,5,5,5).U=0;
%DijData(5,5,5,5).T=[0;0;0;0];
i=0;
j=0;
k=0;
m=0;

%%START---------------------

for i=1:524881
    if (0<NodeSet(1,i) & 10>NodeSet(1,i)& 0<NodeSet(2,i) & 10>NodeSet(2,i)& 0<NodeSet(3,i) & 10>NodeSet(3,i)& 0<NodeSet(4,i) & 10>NodeSet(4,i))
        CurrNode=[NodeSet(1,i);NodeSet(2,i);NodeSet(3,i);NodeSet(4,i)];
%        NeiSet=[ CurrNode(1,i)   CurrNode(1,i)+1  CurrNode(1,i)+1  CurrNode(1,i)+1   CurrNode(1,i)   CurrNode(1,i)-1  CurrNode(1,i)-1  CurrNode(1,i)-1    CurrNode(1,i)    CurrNode(1,i)   CurrNode(1,i)+1  CurrNode(1,i)+1  CurrNode(1,i)+1   CurrNode(1,i)   CurrNode(1,i)-1  CurrNode(1,i)-1   CurrNode(1,i)-1   CurrNode(1,i)     CurrNode(1,i)   CurrNode(1,i)+1  CurrNode(1,i)+1  CurrNode(1,i)+1   CurrNode(1,i)   CurrNode(1,i)-1  CurrNode(1,i)-1   CurrNode(1,i)-1   CurrNode(1,i)     CurrNode(1,i)   CurrNode(1,i)+1   CurrNode(1,i)+1  CurrNode(1,i)+1   CurrNode(1,i)    CurrNode(1,i)-1  CurrNode(1,i)-1  CurrNode(1,i)-1    CurrNode(1,i)     CurrNode(1,i)    CurrNode(1,i)+1   CurrNode(1,i)+1   CurrNode(1,i)+1    CurrNode(1,i)    CurrNode(1,i)-1   CurrNode(1,i)-1   CurrNode(1,i)-1    CurrNode(1,i)     CurrNode(1,i)   CurrNode(1,i)+1  CurrNode(1,i)+1  CurrNode(1,i)+1   CurrNode(1,i)   CurrNode(1,i)-1  CurrNode(1,i)-1  CurrNode(1,i)-1   CurrNode(1,i)    CurrNode(1,i)   CurrNode(1,i)+1   CurrNode(1,i)+1  CurrNode(1,i)+1   CurrNode(1,i)    CurrNode(1,i)-1  CurrNode(1,i)-1  CurrNode(1,i)-1    CurrNode(1,i)     CurrNode(1,i)    CurrNode(1,i)+1   CurrNode(1,i)+1   CurrNode(1,i)+1    CurrNode(1,i)    CurrNode(1,i)-1   CurrNode(1,i)-1   CurrNode(1,i)-1    CurrNode(1,i)     CurrNode(1,i)   CurrNode(1,i)+1  CurrNode(1,i)+1  CurrNode(1,i)+1   CurrNode(1,i)   CurrNode(1,i)-1  CurrNode(1,i)-1  CurrNode(1,i)-1;
%                CurrNode(2,i)+1  CurrNode(2,i)+1   CurrNode(2,i)   CurrNode(2,i)-1  CurrNode(2,i)-1  CurrNode(2,i)-1   CurrNode(2,i)   CurrNode(2,i)+1    CurrNode(2,i)   CurrNode(2,i)+1  CurrNode(2,i)+1   CurrNode(2,i)   CurrNode(2,i)-1  CurrNode(2,i)-1  CurrNode(2,i)-1   CurrNode(2,i)    CurrNode(2,i)+1   CurrNode(2,i)    CurrNode(2,i)+1  CurrNode(2,i)+1   CurrNode(2,i)   CurrNode(2,i)-1  CurrNode(2,i)-1  CurrNode(2,i)-1   CurrNode(2,i)    CurrNode(2,i)+1   CurrNode(2,i)    CurrNode(2,i)+1  CurrNode(2,i)+1    CurrNode(2,i)   CurrNode(2,i)-1  CurrNode(2,i)-1   CurrNode(2,i)-1   CurrNode(2,i)   CurrNode(2,i)+1    CurrNode(2,i)    CurrNode(2,i)+1   CurrNode(2,i)+1    CurrNode(2,i)    CurrNode(2,i)-1   CurrNode(2,i)-1   CurrNode(2,i)-1    CurrNode(2,i)    CurrNode(2,i)+1    CurrNode(2,i)    CurrNode(2,i)+1  CurrNode(2,i)+1   CurrNode(2,i)   CurrNode(2,i)-1  CurrNode(2,i)-1  CurrNode(2,i)-1   CurrNode(2,i)   CurrNode(2,i)+1   CurrNode(2,i)   CurrNode(2,i)+1  CurrNode(2,i)+1    CurrNode(2,i)   CurrNode(2,i)-1  CurrNode(2,i)-1   CurrNode(2,i)-1   CurrNode(2,i)   CurrNode(2,i)+1    CurrNode(2,i)    CurrNode(2,i)+1   CurrNode(2,i)+1    CurrNode(2,i)    CurrNode(2,i)-1   CurrNode(2,i)-1   CurrNode(2,i)-1    CurrNode(2,i)    CurrNode(2,i)+1    CurrNode(2,i)    CurrNode(2,i)+1  CurrNode(2,i)+1   CurrNode(2,i)   CurrNode(2,i)-1  CurrNode(2,i)-1  CurrNode(2,i)-1   CurrNode(2,i)   CurrNode(2,i)+1;
%                 CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)+1  CurrNode(3,i)+1  CurrNode(3,i)+1  CurrNode(3,i)+1  CurrNode(3,i)+1  CurrNode(3,i)+1  CurrNode(3,i)+1  CurrNode(3,i)+1   CurrNode(3,i)+1  CurrNode(3,i)-1   CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1   CurrNode(3,i)-1   CurrNode(3,i)     CurrNode(3,i)    CurrNode(3,i)     CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)     CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)-1   CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1   CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)     CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)     CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)    CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)+1   CurrNode(3,i)-1   CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1  CurrNode(3,i)-1;
%                 CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)     CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)     CurrNode(4,i)    CurrNode(4,i)     CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)    CurrNode(4,i)     CurrNode(4,i)   CurrNode(4,i)+1   CurrNode(4,i)+1  CurrNode(4,i)+1   CurrNode(4,i)+1  CurrNode(4,i)+1  CurrNode(4,i)+1   CurrNode(4,i)+1  CurrNode(4,i)+1  CurrNode(4,i)+1   CurrNode(4,i)+1   CurrNode(4,i)+1   CurrNode(4,i)+1   CurrNode(4,i)+1   CurrNode(4,i)+1   CurrNode(4,i)+1   CurrNode(4,i)+1   CurrNode(4,i)+1   CurrNode(4,i)+1   CurrNode(4,i)+1   CurrNode(4,i)+1  CurrNode(4,i)+1  CurrNode(4,i)+1  CurrNode(4,i)+1  CurrNode(4,i)+1  CurrNode(4,i)+1  CurrNode(4,i)+1  CurrNode(4,i)+1  CurrNode(4,i)-1  CurrNode(4,i)-1  CurrNode(4,i)-1   CurrNode(4,i)-1  CurrNode(4,i)-1  CurrNode(4,i)-1   CurrNode(4,i)-1  CurrNode(4,i)-1  CurrNode(4,i)-1   CurrNode(4,i)-1   CurrNode(4,i)-1   CurrNode(4,i)-1   CurrNode(4,i)-1   CurrNode(4,i)-1   CurrNode(4,i)-1   CurrNode(4,i)-1   CurrNode(4,i)-1   CurrNode(4,i)-1   CurrNode(4,i)-1   CurrNode(4,i)-1  CurrNode(4,i)-1  CurrNode(4,i)-1  CurrNode(4,i)-1  CurrNode(4,i)-1  CurrNode(4,i)-1  CurrNode(4,i)-1  CurrNode(4,i)-1];       
        NeiSet=[ CurrNode(1,1)   CurrNode(1,1)+1  CurrNode(1,1)+1  CurrNode(1,1)+1   CurrNode(1,1)   CurrNode(1,1)-1  CurrNode(1,1)-1  CurrNode(1,1)-1    CurrNode(1,1)    CurrNode(1,1)   CurrNode(1,1)+1  CurrNode(1,1)+1  CurrNode(1,1)+1   CurrNode(1,1)   CurrNode(1,1)-1  CurrNode(1,1)-1   CurrNode(1,1)-1   CurrNode(1,1)     CurrNode(1,1)   CurrNode(1,1)+1  CurrNode(1,1)+1  CurrNode(1,1)+1   CurrNode(1,1)   CurrNode(1,1)-1  CurrNode(1,1)-1   CurrNode(1,1)-1   CurrNode(1,1)     CurrNode(1,1)   CurrNode(1,1)+1   CurrNode(1,1)+1  CurrNode(1,1)+1   CurrNode(1,1)    CurrNode(1,1)-1  CurrNode(1,1)-1  CurrNode(1,1)-1    CurrNode(1,1)     CurrNode(1,1)    CurrNode(1,1)+1   CurrNode(1,1)+1   CurrNode(1,1)+1    CurrNode(1,1)    CurrNode(1,1)-1   CurrNode(1,1)-1   CurrNode(1,1)-1    CurrNode(1,1)     CurrNode(1,1)   CurrNode(1,1)+1  CurrNode(1,1)+1  CurrNode(1,1)+1   CurrNode(1,1)   CurrNode(1,1)-1  CurrNode(1,1)-1  CurrNode(1,1)-1   CurrNode(1,1)    CurrNode(1,1)   CurrNode(1,1)+1   CurrNode(1,1)+1  CurrNode(1,1)+1   CurrNode(1,1)    CurrNode(1,1)-1  CurrNode(1,1)-1  CurrNode(1,1)-1    CurrNode(1,1)     CurrNode(1,1)    CurrNode(1,1)+1   CurrNode(1,1)+1   CurrNode(1,1)+1    CurrNode(1,1)    CurrNode(1,1)-1   CurrNode(1,1)-1   CurrNode(1,1)-1    CurrNode(1,1)     CurrNode(1,1)   CurrNode(1,1)+1  CurrNode(1,1)+1  CurrNode(1,1)+1   CurrNode(1,1)   CurrNode(1,1)-1  CurrNode(1,1)-1  CurrNode(1,1)-1;
                CurrNode(2,1)+1  CurrNode(2,1)+1   CurrNode(2,1)   CurrNode(2,1)-1  CurrNode(2,1)-1  CurrNode(2,1)-1   CurrNode(2,1)   CurrNode(2,1)+1    CurrNode(2,1)   CurrNode(2,1)+1  CurrNode(2,1)+1   CurrNode(2,1)   CurrNode(2,1)-1  CurrNode(2,1)-1  CurrNode(2,1)-1   CurrNode(2,1)    CurrNode(2,1)+1   CurrNode(2,1)    CurrNode(2,1)+1  CurrNode(2,1)+1   CurrNode(2,1)   CurrNode(2,1)-1  CurrNode(2,1)-1  CurrNode(2,1)-1   CurrNode(2,1)    CurrNode(2,1)+1   CurrNode(2,1)    CurrNode(2,1)+1  CurrNode(2,1)+1    CurrNode(2,1)   CurrNode(2,1)-1  CurrNode(2,1)-1   CurrNode(2,1)-1   CurrNode(2,1)   CurrNode(2,1)+1    CurrNode(2,1)    CurrNode(2,1)+1   CurrNode(2,1)+1    CurrNode(2,1)    CurrNode(2,1)-1   CurrNode(2,1)-1   CurrNode(2,1)-1    CurrNode(2,1)    CurrNode(2,1)+1    CurrNode(2,1)    CurrNode(2,1)+1  CurrNode(2,1)+1   CurrNode(2,1)   CurrNode(2,1)-1  CurrNode(2,1)-1  CurrNode(2,1)-1   CurrNode(2,1)   CurrNode(2,1)+1   CurrNode(2,1)   CurrNode(2,1)+1  CurrNode(2,1)+1    CurrNode(2,1)   CurrNode(2,1)-1  CurrNode(2,1)-1   CurrNode(2,1)-1   CurrNode(2,1)   CurrNode(2,1)+1    CurrNode(2,1)    CurrNode(2,1)+1   CurrNode(2,1)+1    CurrNode(2,1)    CurrNode(2,1)-1   CurrNode(2,1)-1   CurrNode(2,1)-1    CurrNode(2,1)    CurrNode(2,1)+1    CurrNode(2,1)    CurrNode(2,1)+1  CurrNode(2,1)+1   CurrNode(2,1)   CurrNode(2,1)-1  CurrNode(2,1)-1  CurrNode(2,1)-1   CurrNode(2,1)   CurrNode(2,1)+1;
                 CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)+1  CurrNode(3,1)+1  CurrNode(3,1)+1  CurrNode(3,1)+1  CurrNode(3,1)+1  CurrNode(3,1)+1  CurrNode(3,1)+1  CurrNode(3,1)+1   CurrNode(3,1)+1  CurrNode(3,1)-1   CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1   CurrNode(3,1)-1   CurrNode(3,1)     CurrNode(3,1)    CurrNode(3,1)     CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)     CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)-1   CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1   CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)     CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)     CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)    CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)+1   CurrNode(3,1)-1   CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1  CurrNode(3,1)-1;
                 CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)     CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)     CurrNode(4,1)    CurrNode(4,1)     CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)    CurrNode(4,1)     CurrNode(4,1)   CurrNode(4,1)+1   CurrNode(4,1)+1  CurrNode(4,1)+1   CurrNode(4,1)+1  CurrNode(4,1)+1  CurrNode(4,1)+1   CurrNode(4,1)+1  CurrNode(4,1)+1  CurrNode(4,1)+1   CurrNode(4,1)+1   CurrNode(4,1)+1   CurrNode(4,1)+1   CurrNode(4,1)+1   CurrNode(4,1)+1   CurrNode(4,1)+1   CurrNode(4,1)+1   CurrNode(4,1)+1   CurrNode(4,1)+1   CurrNode(4,1)+1   CurrNode(4,1)+1  CurrNode(4,1)+1  CurrNode(4,1)+1  CurrNode(4,1)+1  CurrNode(4,1)+1  CurrNode(4,1)+1  CurrNode(4,1)+1  CurrNode(4,1)+1  CurrNode(4,1)-1  CurrNode(4,1)-1  CurrNode(4,1)-1   CurrNode(4,1)-1  CurrNode(4,1)-1  CurrNode(4,1)-1   CurrNode(4,1)-1  CurrNode(4,1)-1  CurrNode(4,1)-1   CurrNode(4,1)-1   CurrNode(4,1)-1   CurrNode(4,1)-1   CurrNode(4,1)-1   CurrNode(4,1)-1   CurrNode(4,1)-1   CurrNode(4,1)-1   CurrNode(4,1)-1   CurrNode(4,1)-1   CurrNode(4,1)-1   CurrNode(4,1)-1  CurrNode(4,1)-1  CurrNode(4,1)-1  CurrNode(4,1)-1  CurrNode(4,1)-1  CurrNode(4,1)-1  CurrNode(4,1)-1  CurrNode(4,1)-1];       
        for y=1:80
            if (0<NeiSet(1,y) & 10>NeiSet(1,y)& 0<NeiSet(2,y) & 10>NeiSet(2,y)& 0<NeiSet(3,y) & 10>NeiSet(3,y)& 0<NeiSet(4,y) & 10>NeiSet(4,y))
                Counter(NeiSet(1,y),NeiSet(2,y),NeiSet(3,y),NeiSet(4,y))=Counter(NeiSet(1,y),NeiSet(2,y),NeiSet(3,y),NeiSet(4,y))+1;
                if (Counter(NeiSet(1,y),NeiSet(2,y),NeiSet(3,y),NeiSet(4,y))<81)
                    NodeSet(:,NodeSetC)=NeiSet(:,y);
                    NodeSetC=NodeSetC+1;
                end   
                if( (DijFullData(NeiSet(1,y),NeiSet(2,y),NeiSet(3,y),NeiSet(4,y)).Q(CurrNode(1,1),CurrNode(2,1),CurrNode(3,1),CurrNode(4,1)) + DijData(CurrNode(1,1),CurrNode(2,1),CurrNode(3,1),CurrNode(4,1)).Q) < (DijData(NeiSet(1,y),NeiSet(2,y),NeiSet(3,y),NeiSet(4,y)).Q)) 
                    DijData(NeiSet(1,y),NeiSet(2,y),NeiSet(3,y),NeiSet(4,y)).Q=DijFullData(NeiSet(1,y),NeiSet(2,y),NeiSet(3,y),NeiSet(4,y)).Q(CurrNode(1,1),CurrNode(2,1),CurrNode(3,1),CurrNode(4,1))+ DijData(CurrNode(1,1),CurrNode(2,1),CurrNode(3,1),CurrNode(4,1)).Q;
                    DijData(NeiSet(1,y),NeiSet(2,y),NeiSet(3,y),NeiSet(4,y)).T=[CurrNode,DijData(CurrNode(1,1),CurrNode(2,1),CurrNode(3,1),CurrNode(4,1)).T];
                    DijData(NeiSet(1,y),NeiSet(2,y),NeiSet(3,y),NeiSet(4,y)).U=[DijFullData(NeiSet(1,y),NeiSet(2,y),NeiSet(3,y),NeiSet(4,y)).U(CurrNode(1,1),CurrNode(2,1),CurrNode(3,1),CurrNode(4,1)),DijData(CurrNode(1,1),CurrNode(2,1),CurrNode(3,1),CurrNode(4,1)).U];
                end
            end
        end
    end
   i
end
disp ' 4D Dijk MAIN '
